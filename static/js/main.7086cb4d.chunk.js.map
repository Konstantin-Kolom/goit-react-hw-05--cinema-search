{"version":3,"sources":["components/Novigation/Novigation.jsx","utilits/api-utils.js","utilits/muvie-api.js","components/ListMovies/ListMovies.jsx","views/HomePage.jsx","views/MoviesPage.jsx","views/NotFondView.jsx","components/Cats/Cast.jsx","components/Reviews/Reviews.jsx","views/MovieDetailsPage.jsx","App.js","index.js","components/Novigation/Novigation.module.css"],"names":["Navigation","exact","to","className","s","navLink","activeClassName","navLinkActive","API_KEY","URL","fetchWithErrorHandling","a","url","config","fetch","response","ok","json","Promise","reject","Error","ListMovies","list","location","useLocation","map","id","name","title","pathname","state","from","HomePage","useState","listMuvies","setListMuvies","useEffect","then","movies","data","results","length","MoviesPage","value","setValue","history","useHistory","searchUrlData","search","searchlData","URLSearchParams","get","searchValue","movie","onSubmit","e","preventDefault","trim","push","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","NotFondView","Cast","actors","setActors","muvieid","useParams","fetchApi","actor","cast","src","profile_path","alt","character","Reviews","reviews","setReviews","review","author","content","MovieDetailsPage","setMuvie","error","setError","useRouteMatch","path","handleClick","catch","poster_path","vote_average","overview","genres","onClick","loading","genre","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7086cb4d.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\r\nimport s from './Novigation.module.css';\r\n\r\nexport const Navigation = () => {\r\n  return (\r\n    <nav>\r\n      <NavLink exact to=\"/\" className={s.navLink} activeClassName={s.navLinkActive}>\r\n        Home\r\n      </NavLink>\r\n      <NavLink to=\"/movies\" className={s.navLink} activeClassName={s.navLinkActive}>\r\n        Movies\r\n      </NavLink>\r\n    </nav>\r\n  );\r\n};\r\n","export const API_KEY = '1cecc067256bce66d88819c359ab872b';\r\nexport const URL = 'https://api.themoviedb.org/3/';\r\n","import { URL, API_KEY } from './api-utils';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok ? await response.json() : Promise.reject(new Error('Not found'));\r\n}\r\n\r\n// Популярные за день\r\nexport function fetchPopularDay() {\r\n  return fetchWithErrorHandling(`${URL}trending/all/day?api_key=${API_KEY}`);\r\n}\r\n\r\n// По ключевому слову\r\nexport function fetchSearchMovies(searchValue) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchValue}&page=1&include_adult=false`,\r\n  );\r\n}\r\n\r\n// Один фильм по ID\r\nexport function fetchMovieId(id) {\r\n  return fetchWithErrorHandling(`${URL}movie/${id}?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\n// Актерский состав фильма\r\nexport function fetchActors(muvieid) {\r\n  return fetchWithErrorHandling(`${URL}movie/${muvieid}/credits?api_key=${API_KEY}&language=en-US`);\r\n}\r\n\r\n// Отзывы\r\nexport function fetchReviews(muvieid) {\r\n  return fetchWithErrorHandling(\r\n    `${URL}movie/${muvieid}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n  );\r\n}\r\n","import { Link, useLocation } from 'react-router-dom';\r\n\r\nexport function ListMovies({ list }) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <>\r\n      {list.map(({ id, name, title }) => (\r\n        <li key={id} id={id}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            {name}\r\n            {title}\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\n\r\nimport * as fetchApi from '../utilits/muvie-api';\r\nimport { ListMovies } from '../components/ListMovies/ListMovies';\r\n\r\nexport function HomePage() {\r\n  const [listMuvies, setListMuvies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchApi.fetchPopularDay().then(movies => {\r\n      const data = movies.results;\r\n      setListMuvies(data);\r\n    });\r\n  }, []);\r\n\r\n  if (listMuvies.length > 0) {\r\n    return (\r\n      <ul>\r\n        <ListMovies list={listMuvies} />\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  if (listMuvies.length === 0) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport * as fetchApi from '../utilits/muvie-api';\r\nimport { ListMovies } from '../components/ListMovies/ListMovies';\r\nimport { useHistory, useLocation, useRouteMatch } from 'react-router';\r\n\r\nexport function MoviesPage() {\r\n  const [value, setValue] = useState('');\r\n  //   const [searchValue, setSearchValue] = useState('');\r\n  const [listMuvies, setListMuvies] = useState('');\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  //   console.log(history);\r\n  //   console.log(location);\r\n\r\n  //   const { url } = useRouteMatch();\r\n  //   console.log(url);\r\n\r\n  const hendleChange = e => {\r\n    const value = e.currentTarget.value;\r\n    setValue(value);\r\n  };\r\n\r\n  const hendleSubmit = e => {\r\n    e.preventDefault();\r\n    if (value.trim() === '') {\r\n      alert('Please, enter movie title.');\r\n      return;\r\n    }\r\n    //  setSearchValue(value);\r\n    history.push({ ...location, search: `query=${value}` });\r\n    setValue('');\r\n  };\r\n\r\n  const searchUrlData = location.search;\r\n\r\n  const searchlData = new URLSearchParams(searchUrlData).get('query');\r\n\r\n  //   useEffect(() => {\r\n  //     if (searchValue !== '') {\r\n  //       fetchApi.fetchSearchMovies(searchValue).then(movie => {\r\n  //         const data = movie.results;\r\n  //         setListMuvies(data);\r\n  //       });\r\n  //     }\r\n  //   }, [searchValue]);\r\n\r\n  useEffect(() => {\r\n    if (searchlData !== null) {\r\n      fetchApi.fetchSearchMovies(searchlData).then(movie => {\r\n        const data = movie.results;\r\n        setListMuvies(data);\r\n      });\r\n    }\r\n  }, [searchlData]);\r\n\r\n  //   console.log(`${url}${searchUrlData}`);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={hendleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search muvie\"\r\n          value={value}\r\n          onChange={hendleChange}\r\n        />\r\n        <button type=\"submit\">\r\n          <span>Search</span>\r\n        </button>\r\n      </form>\r\n\r\n      {/* <Route path={`${url}/${searchUrlData}`}> */}\r\n      {listMuvies !== '' && (\r\n        <div>\r\n          <p>\r\n            The result of a list of films by title: <span> {searchlData}</span>\r\n          </p>\r\n          <ul>\r\n            <ListMovies list={listMuvies} />\r\n          </ul>\r\n        </div>\r\n      )}\r\n      {/* </Route> */}\r\n    </>\r\n  );\r\n}\r\n","export function NotFondView() {\r\n  return <h1>404 Page not fond :( </h1>;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as fetchApi from '../../utilits/muvie-api';\r\n\r\nexport function Cast() {\r\n  const [actors, setActors] = useState([]);\r\n  const { muvieid } = useParams();\r\n\r\n  //   const history = useHistory();\r\n\r\n  //   function handleClick() {\r\n  //     console.log('fff');\r\n  //     history.push(`/movies/${muvieid}`);\r\n  //   }\r\n\r\n  useEffect(() => {\r\n    fetchApi.fetchActors(muvieid).then(actor => {\r\n      const data = actor.cast;\r\n      setActors(data);\r\n    });\r\n  }, [muvieid]);\r\n\r\n  return (\r\n    <>\r\n      {/* <button type=\"button\" onClick={handleClick}>\r\n        Hide additional information\r\n      </button> */}\r\n      {actors.map(actor => (\r\n        <div key={actor.id}>\r\n          <img src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt=\"poster\" />\r\n          <h3>{actor.name}</h3>\r\n          <p>Character: {actor.character}</p>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport * as fetchApi from '../../utilits/muvie-api';\r\n\r\nexport function Reviews() {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const { muvieid } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchApi.fetchReviews(muvieid).then(review => {\r\n      const data = review.results;\r\n      setReviews(data);\r\n    });\r\n  }, [muvieid]);\r\n\r\n  //   const { author, content } = reviews;\r\n\r\n  return (\r\n    <>\r\n      {/* <button type=\"button\">Hide additional information</button> */}\r\n      <ul>\r\n        {reviews.map(review => (\r\n          <li key={review.id}>\r\n            <p>Author: {review.author}</p>\r\n            <p>{review.content}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport {\r\n  Route,\r\n  NavLink,\r\n  useHistory,\r\n  useParams,\r\n  useRouteMatch,\r\n  useLocation,\r\n} from 'react-router-dom';\r\n\r\nimport { NotFondView } from '../views/NotFondView';\r\nimport { Cast } from '../components/Cats/Cast';\r\nimport { Reviews } from '../components/Reviews/Reviews';\r\n\r\nimport * as fetchApi from '../utilits/muvie-api';\r\n\r\nexport function MovieDetailsPage() {\r\n  const [movie, setMuvie] = useState('');\r\n  const [error, setError] = useState(false);\r\n\r\n  const { url, path } = useRouteMatch();\r\n  const { muvieid } = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  function handleClick() {\r\n    history.push(location.state.from);\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchApi\r\n      .fetchMovieId(muvieid)\r\n      .then(data => {\r\n        setMuvie(data);\r\n      })\r\n      .catch(() => setError(true));\r\n  }, [muvieid]);\r\n\r\n  const { name, title, poster_path, vote_average, overview, genres } = movie;\r\n\r\n  if (movie !== '') {\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={handleClick}>\r\n          Go back\r\n        </button>\r\n\r\n        <div>\r\n          <div>\r\n            <img\r\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n              alt=\"poster\"\r\n              loading=\"lazy\"\r\n            />\r\n            <h2 className=\"title\">\r\n              {name}\r\n              {title}\r\n            </h2>\r\n            <p>User score: {vote_average * 10}%</p>\r\n            <p>Overview: {overview}</p>\r\n            <p>\r\n              Genres:\r\n              {genres.map(genre => (\r\n                <span key={genre.id}>{genre.name}</span>\r\n              ))}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <h3>Additional information</h3>\r\n            <div>\r\n              <NavLink to={`${url}/cast`}>Cast</NavLink>\r\n              <NavLink to={`${url}/reviews`}>Reviews</NavLink>\r\n\r\n              <Route path={`${path}/cast`}>\r\n                <Cast />\r\n              </Route>\r\n\r\n              <Route path={`${path}/reviews`}>\r\n                <Reviews />\r\n              </Route>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (movie === '' && error === false) {\r\n    return <h1>Loading</h1>;\r\n  }\r\n\r\n  if (movie === '' && error === true) {\r\n    return (\r\n      <>\r\n        <button type=\"button\" onClick={handleClick}>\r\n          Go back\r\n        </button>\r\n        <NotFondView />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Switch, Route } from 'react-router-dom';\r\n\r\nimport { Navigation } from './components/Novigation/Novigation.jsx';\r\nimport { HomePage } from './views/HomePage.jsx';\r\nimport { MoviesPage } from './views/MoviesPage.jsx';\r\nimport { MovieDetailsPage } from './views/MovieDetailsPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <header className=\"App-header\">\r\n        <Navigation />\r\n      </header>\r\n\r\n      <main>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n\r\n          <Route path=\"/movies/:muvieid\">\r\n            <MovieDetailsPage />\r\n          </Route>\r\n\r\n          <Route path=\"/movies\">\r\n            <MoviesPage />\r\n          </Route>\r\n\r\n          <Route>\r\n            <HomePage />\r\n          </Route>\r\n        </Switch>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport './index.css';\r\nimport 'normalize.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Novigation_navLink__3XWBP\",\"navLinkActive\":\"Novigation_navLinkActive__2cOhi\"};"],"sourceRoot":""}